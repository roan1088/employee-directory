{"version":3,"sources":["components/Header/index.js","components/Main/index.js","components/DirectorySearch/index.js","components/DirectoryTable/index.js","components/Directory/index.js","util/API.js","components/ProfileContent/index.js","components/Profile/index.js","App.js","index.js"],"names":["Header","Main","props","className","children","DirectorySearch","updateSearch","id","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","DirectoryTable","icon","displayState","sortBy","newProfile","asc","onClick","employees","filter","employee","search","name","toLowerCase","includes","map","role","department","Directory","employeeState","useState","setDisplayState","useEffect","term","col","newDisplay","sort","a","b","getAllEmployees","Promise","resolve","setTimeout","ProfileContent","profileState","Profile","App","setEmployeeState","setProfileState","document","title","API","then","res","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.96ed6f83.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header() {\r\n  return (<header>\r\n    <h1>Employee Directory</h1>\r\n  </header>);\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Main(props) {\r\n  return (<main className=\"clearfix\">{props.children}</main>);\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\n\r\nfunction DirectorySearch({ updateSearch }) {\r\n  return (\r\n    <form id=\"directory-form\" onSubmit={(e) => e.preventDefault()}>\r\n      <label>Search for Employee:</label>\r\n      <input type=\"text\" placeholder=\"Enter name\" onChange={(e) => updateSearch(e.target.value)} />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default DirectorySearch;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction DirectoryTable({ displayState, sortBy, newProfile }) {\r\n  let icon;\r\n  if (displayState.asc) {\r\n    icon = \"▲\";\r\n  }\r\n  else {\r\n    icon = \"▼\";\r\n  }\r\n  return (<table id=\"directory-table\">\r\n    <thead>\r\n      <tr>\r\n        <th onClick={() => sortBy(\"name\")}>Name {displayState.sortBy === \"name\" ? icon : \"\"}</th>\r\n        <th onClick={() => sortBy(\"role\")}>Role {displayState.sortBy === \"role\" ? icon : \"\"}</th>\r\n        <th onClick={() => sortBy(\"department\")}>Department {displayState.sortBy === \"department\" ? icon : \"\"}</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {displayState.employees.filter(employee => displayState.search ? employee.name.toLowerCase().includes(displayState.search.toLowerCase()) : true).map(employee => <tr key={employee.id} onClick={() => newProfile(employee.id)}>\r\n        <td>{employee.name}</td>\r\n        <td>{employee.role}</td>\r\n        <td>{employee.department}</td>\r\n      </tr>)}\r\n    </tbody>\r\n  </table>);\r\n}\r\n\r\nexport default DirectoryTable;","import React, { useEffect, useState } from \"react\";\r\nimport DirectorySearch from \"../DirectorySearch\";\r\nimport DirectoryTable from \"../DirectoryTable\";\r\nimport \"./style.css\";\r\n\r\nfunction Directory({ employeeState, newProfile }) {\r\n  const [displayState, setDisplayState] = useState({\r\n    employees: [],\r\n    sortBy: \"\",\r\n    asc: true,\r\n    search: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    setDisplayState({\r\n      ...displayState,\r\n      employees: employeeState.employees\r\n    });\r\n  }, [employeeState]);\r\n\r\n  const sortBy = (col) => {\r\n    if (displayState.sortBy === col) {\r\n      let newDisplay;\r\n      if (displayState.asc) {\r\n        newDisplay = displayState.employees.sort((a, b) => a[col] < b[col] ? 1 : -1);\r\n      }\r\n      else {\r\n        newDisplay = displayState.employees.sort((a, b) => a[col] > b[col] ? 1 : -1);\r\n      }\r\n      setDisplayState({\r\n        ...displayState,\r\n        employees: newDisplay,\r\n        sortBy: col,\r\n        asc: !displayState.asc\r\n      });\r\n    }\r\n    else {\r\n      setDisplayState({\r\n        ...displayState,\r\n        employees: displayState.employees.sort((a, b) => a[col] > b[col] ? 1 : -1),\r\n        sortBy: col,\r\n        asc: true\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateSearch = (term) => {\r\n    setDisplayState({\r\n      ...displayState,\r\n      search: term\r\n    });\r\n  }\r\n\r\n  return (<div id=\"directory\">\r\n    <DirectorySearch updateSearch={updateSearch} />\r\n    <DirectoryTable displayState={displayState} sortBy={sortBy} newProfile={newProfile} />\r\n  </div>);\r\n}\r\n\r\nexport default Directory;","// Dummy data to mock API fetch\nconst employees = [{\n  id: 1,\n  name: \"Michael Scott\",\n  role: \"Regional Manager\",\n  department: \"Management\"\n},\n{\n  id: 2,\n  name: \"Karen Filippelli\",\n  role: \"Regional Manager\",\n  department: \"Management\"\n},\n{\n  id: 3,\n  name: \"Pam Beesly\",\n  role: \"Receptionist\",\n  department: \"Sales\"\n},\n{\n  id: 4,\n  name: \"Jim Halpert\",\n  role: \"Sales Representative\",\n  department: \"Sales\"\n},\n{\n  id: 5,\n  name: \"Dwight Schrute\",\n  role: \"Sales Representative\",\n  department: \"Sales\"\n},\n{\n  id: 6,\n  name: \"Andy Bernard\",\n  role: \"Sales Representative\",\n  department: \"Sales\"\n},\n{\n  id: 7,\n  name: \"Angela Martin\",\n  role: \"Senior Accountant\",\n  department: \"Accounting\"\n},\n{\n  id: 8,\n  name: \"Kevin Malone\",\n  role: \"Accountant\",\n  department: \"Accounting\"\n},\n{\n  id: 9,\n  name: \"Oscar Malone\",\n  role: \"Accountant\",\n  department: \"Accounting\"\n},\n{\n  id: 10,\n  name: \"Toby Flenderson\",\n  role: \"Human Resources Representative\",\n  department: \"Human Resources\"\n}];\n\n// This code is meant to serve as a mock fetch from an API.\nexport const getAllEmployees = new Promise(function(resolve) {\n  setTimeout(() => {\n    resolve(employees);\n  }, 1000);\n});\n","import React from \"react\";\r\n\r\nfunction ProfileContent({ profileState }) {\r\n  return (\r\n    <div id=\"profile-content\">\r\n      <p>ID: {profileState.id}</p>\r\n      <p>Name: {profileState.name}</p>\r\n      <p>Role: {profileState.role}</p>\r\n      <p>Department: {profileState.department}</p>\r\n      {/* Other infos if any */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileContent;","import React from \"react\";\r\nimport ProfileContent from \"../ProfileContent\";\r\nimport \"./style.css\";\r\n\r\nfunction Profile({ profileState }) {\r\n  return (\r\n    <div id=\"profile\">\r\n      <p>Employee Profile:</p>\r\n      {profileState.id ? <ProfileContent profileState={profileState} /> : <p>Click on an employee view their profile</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Directory from \"./components/Directory\";\nimport * as API from \"./util/API\";\nimport Profile from \"./components/Profile\";\n\nfunction App() {\n  const [employeeState, setEmployeeState] = useState({\n    employees: []\n  });\n  const [profileState, setProfileState] = useState({});\n\n  useEffect(() => {\n    document.title = \"Employee Directory\";\n    // For demonstration purposes, we mock an API call\n    API.getAllEmployees.then(res => {\n      setEmployeeState({employees: res});\n    })\n  }, []);\n\n  const newProfile = (id) => {\n    setProfileState(employeeState.employees.filter(employee => employee.id === id)[0]);\n  }\n\n  return (\n    <div>\n      <Header />\n      <Main>\n        <Directory employeeState={employeeState} newProfile={newProfile} />        \n        <Profile profileState={profileState} />\n      </Main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}